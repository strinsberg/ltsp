(lt64-asm-mod

;; Take the address of a form on top of the stack and print it
(proc  print/form
       :first :!error :eq  ;; TODO get rid of this when all errors use ERROR
         :push print-form-is-error :branch
       :first :!nil :eq
         :push print-form-is-nil :branch
       :first :!number/int?
         :push print-form-int :branch
       :first :!number/fixed?
         :push print-form-fixed :branch
       :first :!pair/pair?
         :push print-form-pair :branch
       :first :!pair/dotted?
         :push print-form-dotted :branch
       :first :!proc/procedure?
         :push print-form-procedure :branch
       ;; else symbol
       :push sym/print-name :call
       :ret

:label print-form-is-error
       :push error-sym :prnmem-lb
       :ret
:label print-form-is-nil
       :push nil-sym :prnmem-lb
       :ret
:label print-form-int
       :!number/value
       :dprn :ret
:label print-form-fixed
       :!number/value
       :fprn :ret
:label print-form-pair
       :push print/pair :call
       :ret
:label print-form-dotted
       :push print/dotted :call
       :ret
:label print-form-procedure
       :push print/procedure :call
       :ret
)

;; Takes the address of a pair and prints it as an s-expression.
(proc  print/pair
       :!ch-lp :prnch
:label print-pair-loop
       :first :!pair/car :push print/form :call
       ;:!prn-nl
       ;:first :wprn :!prn-nl
       ;:first :!pair/car :wprn :!prn-nl
       ;:first :!pair/cdr :wprn :!prn-nl
       :first :!pair/dotted?
         :push print-pair-end-dotted :branch
       :!pair/cdr
       :first :!nil :eq
         :push print-pair-end :branch
       :!ch-space :prnch
       :push print-pair-loop :jump

:label print-pair-end
       :pop
       :!ch-rp :prnch
       :ret
:label print-pair-end-dotted
       :!ch-space :prnch
       :!pair/cdr
       :push print/form :call
       :!ch-rp :prnch
       :ret
)

;; Takes the address of a dotted pair and prints it as (car . cdr)
(proc  print/dotted
       :!ch-lp :prnch
       :first :!pair/car :push print/form :call
       :first :!pair/cdr :!NIL :eq
         :push print-dotted-cdr-nil :branch
       :!ch-space :prnch :!ch-dot :prnch :!ch-space :prnch
       :!pair/cdr :push print/form :call
       :!ch-rp :prnch
       :ret

:label print-dotted-cdr-nil
       :pop
       :!ch-rp :prnch
       :ret
)

;; Takes the address of a procedure and prints it #((params) body)
(proc  print/procedure
       :!ch-hash :prnch
       :!ch-lp :prnch
       :first :!proc/params :push print/form :call
       :!ch-space :prnch
       :first :!proc/body :push print/form :call
       :!ch-rp :prnch
       :pop
       :ret
)

)

