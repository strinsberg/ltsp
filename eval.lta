(lt64-asm-mod

(proc eval/form
    :first :push eval/atom? :call
      :push eval-form-atom :branch
    ;; else is list (for now)
    :push eval/apply :call
    :ret

:label eval-form-atom
    ;; just "return" the atom
    :ret)

;; Take an address and check if it is atom
(proc  eval/atom?
       :first :!sym/symbol?
         :second :!number/int?
         :or :second :!number/fixed?
         :or
       :swap :pop
       :ret)

;; Takes an address of a pair and applies the car as a function on the cdr
;; Leaves the result's address.
(proc  eval/apply
       :first :!pair/car
       :first :!QUOTE :eq
         :push eval-apply-quote :branch
       :first :!CAR :eq
         :push eval-apply-car :branch
       :first :!CDR :eq
         :push eval-apply-cdr :branch
       :!NIL ;; for now so all lists must be quoted to not be evalled
       :ret

:label eval-apply-quote
       :pop
       :!pair/cdr :!pair/car
       :ret
:label eval-apply-car
       :pop
       :push eval/pair-args :call
       :!pair/car
       :ret
:label eval-apply-cdr
       :pop
       :push eval/pair-args :call
       :!pair/cdr
       :ret
)

(proc  eval/pair-args
       :!pair/cdr :!pair/car
       :push eval/form :call
       :ret
)
)

